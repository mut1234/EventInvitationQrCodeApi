// <auto-generated />
using System;
using EventInvitationQrCodeApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EventInvitationQrCodeApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EventInvitationQrCodeApi.Models.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"));

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EventId");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("EventInvitationQrCodeApi.Models.QrCode", b =>
                {
                    b.Property<int>("QrCodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QrCodeId"));

                    b.Property<string>("QrCodeString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QrCode_User_Id")
                        .HasColumnType("int");

                    b.HasKey("QrCodeId");

                    b.HasIndex("QrCode_User_Id");

                    b.ToTable("QrCode");
                });

            modelBuilder.Entity("EventInvitationQrCodeApi.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UserDateAddedToSystem")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Address = "St 124",
                            City = "Amman",
                            Email = "Ahmad3323@gmail.com",
                            Name = "Ahmad",
                            PhoneNumber = "079649321763",
                            UserDateAddedToSystem = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = 2,
                            Address = "St 1324",
                            City = "Amman",
                            Email = "Ali3323@gmail.com",
                            Name = "Ali",
                            PhoneNumber = "07964421763",
                            UserDateAddedToSystem = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = 3,
                            Address = "St 1214",
                            City = "Amman",
                            Email = "Yaser4323@gmail.com",
                            Name = "Yaser",
                            PhoneNumber = "079649351763",
                            UserDateAddedToSystem = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = 4,
                            Address = "St 1244",
                            City = "Amman",
                            Email = "khaled4323@gmail.com",
                            Name = "khaled",
                            PhoneNumber = "079649521763",
                            UserDateAddedToSystem = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = 5,
                            Address = "St 1224",
                            City = "Amman",
                            Email = "mhmod4323@gmail.com",
                            Name = "mhmod",
                            PhoneNumber = "079649321763",
                            UserDateAddedToSystem = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = 6,
                            Address = "St 1264",
                            City = "Amman",
                            Email = "mustafa4323@gmail.com",
                            Name = "mustafa",
                            PhoneNumber = "079149321762",
                            UserDateAddedToSystem = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EventInvitationQrCodeApi.Models.UserEvent", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("UserEvent");
                });

            modelBuilder.Entity("EventInvitationQrCodeApi.Models.QrCode", b =>
                {
                    b.HasOne("EventInvitationQrCodeApi.Models.User", "User")
                        .WithMany("QrCode")
                        .HasForeignKey("QrCode_User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EventInvitationQrCodeApi.Models.UserEvent", b =>
                {
                    b.HasOne("EventInvitationQrCodeApi.Models.Event", "Event")
                        .WithMany("UserEvent")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EventInvitationQrCodeApi.Models.User", "User")
                        .WithMany("UserEvent")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EventInvitationQrCodeApi.Models.Event", b =>
                {
                    b.Navigation("UserEvent");
                });

            modelBuilder.Entity("EventInvitationQrCodeApi.Models.User", b =>
                {
                    b.Navigation("QrCode");

                    b.Navigation("UserEvent");
                });
#pragma warning restore 612, 618
        }
    }
}
